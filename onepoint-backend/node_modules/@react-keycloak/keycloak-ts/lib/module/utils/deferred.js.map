{"version":3,"sources":["deferred.ts"],"names":["Deferred","constructor","promise","Promise","resolve","reject","getPromise"],"mappings":";;AAAA,eAAe,MAAMA,QAAN,CAAkB;AAK/BC,EAAAA,WAAW,GAAG;AAAA;;AAAA;;AAAA;;AACZ,SAAKC,OAAL,GAAe,IAAIC,OAAJ,CAAe,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACjD,WAAKA,MAAL,GAAcA,MAAd;AACA,WAAKD,OAAL,GAAeA,OAAf;AACD,KAHc,CAAf;AAID;;AAEME,EAAAA,UAAU,GAAe;AAC9B,WAAO,KAAKJ,OAAZ;AACD;;AAd8B","sourcesContent":["export default class Deferred<T> {\n  private promise: Promise<T>;\n  public resolve!: (value: T | PromiseLike<T>) => void;\n  public reject!: (reason?: any) => void;\n\n  constructor() {\n    this.promise = new Promise<T>((resolve, reject) => {\n      this.reject = reject;\n      this.resolve = resolve;\n    });\n  }\n\n  public getPromise(): Promise<T> {\n    return this.promise;\n  }\n}\n"]}