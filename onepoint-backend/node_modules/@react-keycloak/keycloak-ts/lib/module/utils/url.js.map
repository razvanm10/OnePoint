{"version":3,"sources":["url.ts"],"names":["encode","str","replace","encodeURIComponent","match","decode","decodeURIComponent","formatQuerystringParameters","parametersMap","Array","from","entries","map","key","value","join","extractQuerystringParameters","querystring","split","segment","reduce","obj"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,CAAgBC,GAAhB,EAA6B;AAC3B,QAAMC,OAA+B,GAAG;AACtC,SAAK,KADiC;AAEtC,SAAK,KAFiC;AAGtC,SAAK,KAHiC;AAItC,SAAK,KAJiC;AAKtC,SAAK,KALiC;AAMtC,WAAO,GAN+B;AAOtC,WAAO;AAP+B,GAAxC;AAUA,SAAOC,kBAAkB,CAACF,GAAD,CAAlB,CAAwBC,OAAxB,CAAgC,kBAAhC,EAAoD,UAAUE,KAAV,EAAiB;AAC1E,WAAOF,OAAO,CAACE,KAAD,CAAd;AACD,GAFM,CAAP;AAGD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,MAAT,CAAgBJ,GAAhB,EAA6B;AAC3B,SAAOA,GAAG,CACPC,OADI,CACI,OADJ,EACa,KADb,EAEJA,OAFI,CAEI,mBAFJ,EAEyB,UAAUE,KAAV,EAAiB;AAC7C,WAAOE,kBAAkB,CAACF,KAAD,CAAzB;AACD,GAJI,CAAP;AAKD;;AAED,OAAO,SAASG,2BAAT,CACLC,aADK,EAEL;AACA,SAAOC,KAAK,CAACC,IAAN,CAAWF,aAAa,CAACG,OAAd,EAAX,EACJC,GADI,CACA;AAAA,QAAC,CAACC,GAAD,EAAMC,KAAN,CAAD;AAAA,WAAmB,GAAEd,MAAM,CAACa,GAAD,CAAM,IAAGb,MAAM,CAAE,GAAEc,KAAM,EAAV,CAAa,EAAvD;AAAA,GADA,EAEJC,IAFI,CAEC,GAFD,CAAP;AAGD;AAED,OAAO,SAASC,4BAAT,CAAsCC,WAAtC,EAA2D;AAChE,SAAOA,WAAW,CACff,OADI,CACI,GADJ,EACS,EADT,EAEJgB,KAFI,CAEE,GAFF,EAGJN,GAHI,CAGAO,OAAO,IAAIA,OAAO,CAACD,KAAR,CAAc,GAAd,CAHX,EAIJE,MAJI,CAIG,CAACC,GAAD,YAAuB;AAAA,QAAjB,CAACR,GAAD,EAAMC,KAAN,CAAiB;AAC7BO,IAAAA,GAAG,CAAChB,MAAM,CAACQ,GAAD,CAAP,CAAH,GAAmBR,MAAM,CAACS,KAAD,CAAzB;AACA,WAAOO,GAAP;AACD,GAPI,EAOF,EAPE,CAAP;AAQD","sourcesContent":["/**\n * Encode string in a format suitable for URL\n *\n * Ported from https://github.com/jerrybendy/url-search-params-polyfill\n * @see https://github.com/jerrybendy/url-search-params-polyfill/blob/fc69a9ed9b0425f93db2b842574044a615c86bc8/index.js#L240\n */\nfunction encode(str: string) {\n  const replace: Record<string, string> = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00',\n  };\n\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function (match) {\n    return replace[match];\n  });\n}\n\n/**\n * Decode an URL-suitable string into a string\n *\n * Ported from https://github.com/jerrybendy/url-search-params-polyfill\n * @see https://github.com/jerrybendy/url-search-params-polyfill/blob/fc69a9ed9b0425f93db2b842574044a615c86bc8/index.js#L255\n */\nfunction decode(str: string) {\n  return str\n    .replace(/[ +]/g, '%20')\n    .replace(/(%[a-f0-9]{2})+/gi, function (match) {\n      return decodeURIComponent(match);\n    });\n}\n\nexport function formatQuerystringParameters(\n  parametersMap: Map<string, unknown>\n) {\n  return Array.from(parametersMap.entries())\n    .map(([key, value]) => `${encode(key)}=${encode(`${value}`)}`)\n    .join('&');\n}\n\nexport function extractQuerystringParameters(querystring: string) {\n  return querystring\n    .replace('?', '')\n    .split('&')\n    .map(segment => segment.split('='))\n    .reduce((obj, [key, value]) => {\n      obj[decode(key)] = decode(value);\n      return obj;\n    }, {} as Record<string, string>);\n}\n"]}